<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-17T05:06:35 IST" name="Suite" finished-at="2022-07-17T05:06:52 IST" duration-ms="16615">
    <groups>
    </groups>
    <test started-at="2022-07-17T05:06:35 IST" name="Test" finished-at="2022-07-17T05:06:52 IST" duration-ms="16615">
      <class name="qaClickAcademy.Dropdown">
        <test-method is-config="true" signature="onTestStart(org.testng.ITestResult)[pri:0, instance:qaClickAcademy.Dropdown@651aed93]" started-at="2022-07-17T05:06:35 IST" name="onTestStart" finished-at="2022-07-17T05:06:35 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Dropdown.dropdown()[pri:0, instance:qaClickAcademy.Dropdown@651aed93] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onTestStart -->
        <test-method signature="dropdown()[pri:0, instance:qaClickAcademy.Dropdown@651aed93]" started-at="2022-07-17T05:06:35 IST" name="dropdown" finished-at="2022-07-17T05:06:51 IST" duration-ms="15995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropdown -->
        <test-method is-config="true" signature="onTestFailure(org.testng.ITestResult)[pri:0, instance:qaClickAcademy.Dropdown@651aed93]" started-at="2022-07-17T05:06:51 IST" name="onTestFailure" finished-at="2022-07-17T05:06:51 IST" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dropdown status=SUCCESS method=Dropdown.dropdown()[pri:0, instance:qaClickAcademy.Dropdown@651aed93] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onTestFailure -->
      </class> <!-- qaClickAcademy.Dropdown -->
      <class name="qaClickAcademy.HideShow">
        <test-method is-config="true" signature="onTestStart(org.testng.ITestResult)[pri:0, instance:qaClickAcademy.HideShow@42b3b079]" started-at="2022-07-17T05:06:35 IST" name="onTestStart" finished-at="2022-07-17T05:06:35 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=HideShow.hideshow()[pri:0, instance:qaClickAcademy.HideShow@42b3b079] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onTestStart -->
        <test-method signature="hideshow()[pri:0, instance:qaClickAcademy.HideShow@42b3b079]" started-at="2022-07-17T05:06:35 IST" name="hideshow" finished-at="2022-07-17T05:06:44 IST" duration-ms="9226" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at qaClickAcademy.HideShow.hideshow(HideShow.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hideshow -->
        <test-method is-config="true" signature="onTestFailure(org.testng.ITestResult)[pri:0, instance:qaClickAcademy.HideShow@42b3b079]" started-at="2022-07-17T05:06:44 IST" name="onTestFailure" finished-at="2022-07-17T05:06:45 IST" duration-ms="704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hideshow status=FAILURE method=HideShow.hideshow()[pri:0, instance:qaClickAcademy.HideShow@42b3b079] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onTestFailure -->
      </class> <!-- qaClickAcademy.HideShow -->
      <class name="qaClickAcademy.TextField">
        <test-method is-config="true" signature="onTestStart(org.testng.ITestResult)[pri:0, instance:qaClickAcademy.TextField@4dd6fd0a]" started-at="2022-07-17T05:06:35 IST" name="onTestStart" finished-at="2022-07-17T05:06:35 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TextField.textfield()[pri:0, instance:qaClickAcademy.TextField@4dd6fd0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onTestStart -->
        <test-method signature="textfield()[pri:0, instance:qaClickAcademy.TextField@4dd6fd0a]" started-at="2022-07-17T05:06:35 IST" name="textfield" finished-at="2022-07-17T05:06:47 IST" duration-ms="11811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textfield -->
        <test-method is-config="true" signature="onTestFailure(org.testng.ITestResult)[pri:0, instance:qaClickAcademy.TextField@4dd6fd0a]" started-at="2022-07-17T05:06:47 IST" name="onTestFailure" finished-at="2022-07-17T05:06:47 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=textfield status=SUCCESS method=TextField.textfield()[pri:0, instance:qaClickAcademy.TextField@4dd6fd0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onTestFailure -->
      </class> <!-- qaClickAcademy.TextField -->
      <class name="qaClickAcademy.RadioButtons">
        <test-method is-config="true" signature="onTestStart(org.testng.ITestResult)[pri:0, instance:qaClickAcademy.RadioButtons@56dc1551]" started-at="2022-07-17T05:06:35 IST" name="onTestStart" finished-at="2022-07-17T05:06:35 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=RadioButtons.radiobuttons()[pri:0, instance:qaClickAcademy.RadioButtons@56dc1551] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onTestStart -->
        <test-method signature="radiobuttons()[pri:0, instance:qaClickAcademy.RadioButtons@56dc1551]" started-at="2022-07-17T05:06:35 IST" name="radiobuttons" finished-at="2022-07-17T05:06:52 IST" duration-ms="16585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radiobuttons -->
        <test-method is-config="true" signature="onTestFailure(org.testng.ITestResult)[pri:0, instance:qaClickAcademy.RadioButtons@56dc1551]" started-at="2022-07-17T05:06:52 IST" name="onTestFailure" finished-at="2022-07-17T05:06:52 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=radiobuttons status=SUCCESS method=RadioButtons.radiobuttons()[pri:0, instance:qaClickAcademy.RadioButtons@56dc1551] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onTestFailure -->
      </class> <!-- qaClickAcademy.RadioButtons -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
